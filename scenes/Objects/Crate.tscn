[gd_scene load_steps=8 format=2]

[ext_resource path="res://assets/Sprites/08-Box/Idle.png" type="Texture" id=1]

[sub_resource type="PhysicsMaterial" id=1]
rough = true

[sub_resource type="GDScript" id=2]
script/source = "extends RigidBody2D

var state

remote var pos = Vector2.ZERO
remote var rot = 0

###

sync func hit(posFrom, inaccuracyX, inaccuracyY):
	if self.position.x - posFrom.x <= 0:
		self.apply_impulse(Vector2(inaccuracyX,inaccuracyY), Vector2(-100, -400))
	else:
		self.apply_impulse(Vector2(inaccuracyX,inaccuracyY), Vector2(100, -400))
	rpc(\"requestState\", \"hit\")

remote func _syncPhysics():
	if(is_network_master()):
		rset(\"pos\", self.position)
		rset(\"rot\", self.rotation)
	else:
		mode = RigidBody2D.MODE_KINEMATIC
		position = pos
		rotation = rot

func _integrate_forces(state):
	rpc(\"_syncPhysics\")

###

#Animation
sync func requestState(requestedState):
	match $AnimationPlayer.current_animation:
		\"hit\":
			pass
		_:
			if $AnimationPlayer.has_animation(requestedState):
				$AnimationPlayer.play(requestedState)
				state = requestedState

func _on_AnimationPlayer_animation_finished(anim_name):
	rpc(\"requestState\",\"idle\")
"

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 30, 22.3585 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float whitening = 255;

void fragment() {
    vec4 texture_color = texture(TEXTURE, UV);
    COLOR = vec4(mix(texture_color.rgb, vec3(1,1,1), whitening), texture_color.a);
}"

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/whitening = 0.0

[sub_resource type="Animation" id=6]
length = 0.3
step = 0.01
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:material")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ SubResource( 4 ), null ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:material:shader_param/whitening")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.15, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ 1.0, 0.8, 0.0 ]
}

[node name="Crate" type="RigidBody2D" groups=["bodies"]]
physics_material_override = SubResource( 1 )
gravity_scale = 10.0
contacts_reported = 10
contact_monitor = true
script = SubResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 1.67433, 0.0299473 )
scale = Vector2( 3, 3 )
texture = ExtResource( 1 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 5 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
anims/hit = SubResource( 6 )

[connection signal="animation_finished" from="AnimationPlayer" to="." method="_on_AnimationPlayer_animation_finished"]
